{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", {\n  value,\n  configurable: true\n});\n\n// index.ts\nimport { point } from \"@turf/helpers\";\n\n// lib/sweepline-intersections-export.ts\nimport lib from \"sweepline-intersections\";\nvar sweeplineIntersections = lib;\n\n// index.ts\nfunction kinks(featureIn) {\n  const results = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  if (featureIn.type === \"Feature\" && (featureIn.geometry.type === \"Point\" || featureIn.geometry.type === \"MultiPoint\")) {\n    throw new Error(\"Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry\");\n  }\n  const intersections = sweeplineIntersections(featureIn, false);\n  for (let i = 0; i < intersections.length; ++i) {\n    const intersection = intersections[i];\n    results.features.push(point([intersection[0], intersection[1]]));\n  }\n  return results;\n}\n__name(kinks, \"kinks\");\nvar turf_kinks_default = kinks;\nexport { turf_kinks_default as default, kinks };","map":{"version":3,"names":["point","lib","sweeplineIntersections","kinks","featureIn","results","type","features","geometry","Error","intersections","i","length","intersection","push","__name","turf_kinks_default"],"sources":["/Users/minaguevara/Desktop/Dev/web_dev/rus-map/node_modules/@turf/kinks/index.ts","/Users/minaguevara/Desktop/Dev/web_dev/rus-map/node_modules/@turf/kinks/lib/sweepline-intersections-export.ts"],"sourcesContent":["import {\n  Feature,\n  FeatureCollection,\n  LineString,\n  MultiLineString,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"geojson\";\nimport { point } from \"@turf/helpers\";\nimport { sweeplineIntersections as findIntersections } from \"./lib/sweepline-intersections-export.js\";\n\n/**\n * Takes a {@link LineString|linestring}, {@link MultiLineString|multi-linestring},\n * {@link MultiPolygon|multi-polygon} or {@link Polygon|polygon} and\n * returns {@link Point|points} at all self-intersections.\n *\n * @name kinks\n * @param {Feature<LineString|MultiLineString|MultiPolygon|Polygon>} featureIn input feature\n * @returns {FeatureCollection<Point>} self-intersections\n * @example\n * var poly = turf.polygon([[\n *   [-12.034835, 8.901183],\n *   [-12.060413, 8.899826],\n *   [-12.03638, 8.873199],\n *   [-12.059383, 8.871418],\n *   [-12.034835, 8.901183]\n * ]]);\n *\n * var kinks = turf.kinks(poly);\n *\n * //addToMap\n * var addToMap = [poly, kinks]\n */\nfunction kinks<T extends LineString | MultiLineString | Polygon | MultiPolygon>(\n  featureIn: Feature<T>\n): FeatureCollection<Point> {\n  const results: FeatureCollection<Point> = {\n    type: \"FeatureCollection\",\n    features: [],\n  };\n  if (\n    featureIn.type === \"Feature\" &&\n    ((featureIn as Feature).geometry.type === \"Point\" ||\n      (featureIn as Feature).geometry.type === \"MultiPoint\")\n  ) {\n    throw new Error(\n      \"Input must be a LineString, MultiLineString, \" +\n        \"Polygon, or MultiPolygon Feature or Geometry\"\n    );\n  }\n  const intersections = findIntersections(featureIn, false);\n  for (let i = 0; i < intersections.length; ++i) {\n    const intersection = intersections[i];\n    results.features.push(point([intersection[0], intersection[1]]));\n  }\n  return results;\n}\n\nexport { kinks };\nexport default kinks;\n","// Get around problems with moduleResolution node16 and some older libraries.\n// Manifests as \"This expression is not callable ... has no call signatures\"\n// https://stackoverflow.com/a/74709714\n\nimport lib from \"sweepline-intersections\";\n\nexport const sweeplineIntersections = lib as unknown as typeof lib.default;\n"],"mappings":";;;;;;;AASA,SAASA,KAAA,QAAa;;;ACLtB,OAAOC,GAAA,MAAS;AAET,IAAMC,sBAAA,GAAyBD,GAAA;;;AD4BtC,SAASE,MACPC,SAAA,EAC0B;EAC1B,MAAMC,OAAA,GAAoC;IACxCC,IAAA,EAAM;IACNC,QAAA,EAAU;EACZ;EACA,IACEH,SAAA,CAAUE,IAAA,KAAS,cACjBF,SAAA,CAAsBI,QAAA,CAASF,IAAA,KAAS,WACvCF,SAAA,CAAsBI,QAAA,CAASF,IAAA,KAAS,eAC3C;IACA,MAAM,IAAIG,KAAA,CACR,2FAEF;EACF;EACA,MAAMC,aAAA,GAAgBR,sBAAA,CAAkBE,SAAA,EAAW,KAAK;EACxD,SAASO,CAAA,GAAI,GAAGA,CAAA,GAAID,aAAA,CAAcE,MAAA,EAAQ,EAAED,CAAA,EAAG;IAC7C,MAAME,YAAA,GAAeH,aAAA,CAAcC,CAAC;IACpCN,OAAA,CAAQE,QAAA,CAASO,IAAA,CAAKd,KAAA,CAAM,CAACa,YAAA,CAAa,CAAC,GAAGA,YAAA,CAAa,CAAC,CAAC,CAAC,CAAC;EACjE;EACA,OAAOR,OAAA;AACT;AAvBSU,MAAA,CAAAZ,KAAA;AA0BT,IAAOa,kBAAA,GAAQb,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}