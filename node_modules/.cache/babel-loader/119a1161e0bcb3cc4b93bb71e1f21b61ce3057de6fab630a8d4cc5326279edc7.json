{"ast":null,"code":"var _jsxFileName = \"/Users/minaguevara/Desktop/Dev/web_dev/rus-map/src/Maps.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { useMap } from \"react-leaflet/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icon = L.icon({\n  iconUrl: \"./placeholder.png\",\n  iconSize: [38, 38]\n});\nconst position = [19.432608, -99.133209];\nfunction ResetCenterView(props) {\n  _s();\n  const {\n    selectPosition\n  } = props;\n  const map = useMap();\n  useEffect(() => {\n    if (selectPosition) {\n      map.setView(L.latLng(selectPosition === null || selectPosition === void 0 ? void 0 : selectPosition.lat, selectPosition === null || selectPosition === void 0 ? void 0 : selectPosition.lon), map.getZoom(), {\n        animate: true\n      });\n    }\n  }, [selectPosition]);\n  return null;\n}\n_s(ResetCenterView, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ResetCenterView;\nfunction Maps(props) {\n  _s2();\n  const {\n    selectPosition\n  } = props;\n  const [geoData, setGeoData] = useState(null);\n  const [selectedPolygon, setSelectedPolygon] = useState(null);\n  const locationSelection = [selectPosition === null || selectPosition === void 0 ? void 0 : selectPosition.lat, selectPosition === null || selectPosition === void 0 ? void 0 : selectPosition.lon];\n  useEffect(() => {\n    fetch(\"/agebs.geojson\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setGeoData(data);\n    }).catch(error => {\n      console.error(\"Error fetching the GeoJSON data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (geoData && selectPosition) {\n      const point = L.latLng(selectPosition.lat, selectPosition.lon);\n\n      // Find the polygon that contains the point\n      const containingPolygon = geoData.features.find(feature => {\n        const layer = L.geoJSON(feature);\n        return layer.getBounds().contains(point);\n      });\n      setSelectedPolygon(containingPolygon);\n    }\n  }, [geoData, selectPosition]);\n  const customIcon = new Icon({\n    iconUrl: require(\"./assets/marker.png\"),\n    iconSize: [38, 38]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), selectPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: locationSelection,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResetCenterView, {\n        selectPosition: selectPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), geoData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), selectedPolygon && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: selectedPolygon,\n        style: {\n          color: \"red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"This is the polygon containing the selected point.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s2(Maps, \"ul4xhbHaDWvaxJz10vO6B4Oj6DE=\");\n_c2 = Maps;\nexport default Maps;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResetCenterView\");\n$RefreshReg$(_c2, \"Maps\");","map":{"version":3,"names":["React","useEffect","useState","L","MapContainer","TileLayer","Marker","Popup","GeoJSON","Icon","useMap","jsxDEV","_jsxDEV","icon","iconUrl","iconSize","position","ResetCenterView","props","_s","selectPosition","map","setView","latLng","lat","lon","getZoom","animate","_c","Maps","_s2","geoData","setGeoData","selectedPolygon","setSelectedPolygon","locationSelection","fetch","then","response","ok","Error","status","json","data","catch","error","console","point","containingPolygon","features","find","feature","layer","geoJSON","getBounds","contains","customIcon","require","className","children","center","zoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c2","$RefreshReg$"],"sources":["/Users/minaguevara/Desktop/Dev/web_dev/rus-map/src/Maps.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { useMap } from \"react-leaflet/hooks\";\n\nconst icon = L.icon({\n  iconUrl: \"./placeholder.png\",\n  iconSize: [38, 38],\n});\n\nconst position = [19.432608, -99.133209];\n\nfunction ResetCenterView(props) {\n  const { selectPosition } = props;\n  const map = useMap();\n\n  useEffect(() => {\n    if (selectPosition) {\n      map.setView(\n        L.latLng(selectPosition?.lat, selectPosition?.lon),\n        map.getZoom(),\n        {\n          animate: true,\n        }\n      );\n    }\n  }, [selectPosition]);\n\n  return null;\n}\n\nfunction Maps(props) {\n  const { selectPosition } = props;\n  const [geoData, setGeoData] = useState(null);\n  const [selectedPolygon, setSelectedPolygon] = useState(null);\n  const locationSelection = [selectPosition?.lat, selectPosition?.lon];\n\n  useEffect(() => {\n    fetch(\"/agebs.geojson\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setGeoData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching the GeoJSON data:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (geoData && selectPosition) {\n      const point = L.latLng(selectPosition.lat, selectPosition.lon);\n\n      // Find the polygon that contains the point\n      const containingPolygon = geoData.features.find((feature) => {\n        const layer = L.geoJSON(feature);\n        return layer.getBounds().contains(point);\n      });\n\n      setSelectedPolygon(containingPolygon);\n    }\n  }, [geoData, selectPosition]);\n\n  const customIcon = new Icon({\n    iconUrl: require(\"./assets/marker.png\"),\n    iconSize: [38, 38],\n  });\n\n  return (\n    <div className=\"map-container\">\n      <MapContainer center={position} zoom={13}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {selectPosition && (\n          <Marker position={locationSelection} icon={customIcon}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        )}\n        <ResetCenterView selectPosition={selectPosition} />\n\n        {geoData && <GeoJSON data={geoData} />}\n\n        {selectedPolygon && (\n          <GeoJSON data={selectedPolygon} style={{ color: \"red\" }}>\n            <Popup>This is the polygon containing the selected point.</Popup>\n          </GeoJSON>\n        )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}