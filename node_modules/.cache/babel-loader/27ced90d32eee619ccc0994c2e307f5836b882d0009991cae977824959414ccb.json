{"ast":null,"code":"var _jsxFileName = \"/Users/minaguevara/Desktop/Dev/web_dev/rus-map/src/Maps.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { useMap } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst position = [19.432608, -99.133209];\nfunction ResetCenterView(props) {\n  _s();\n  const {\n    selectPosition\n  } = props;\n  const map = useMap();\n  useEffect(() => {\n    if (selectPosition) {\n      map.setView(L.latLng(selectPosition.lat, selectPosition.lon), map.getZoom(), {\n        animate: true\n      });\n    }\n  }, [selectPosition]);\n  return null;\n}\n_s(ResetCenterView, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ResetCenterView;\nfunction Maps(props) {\n  _s2();\n  const {\n    selectPosition\n  } = props;\n  const [agebsGeoJSON, setAgebsGeoJSON] = useState(null);\n\n  // Simulated markers for testing\n  const markers = [{\n    geocode: [19.50387, -99.20958],\n    popUp: \"Test 1\"\n  }, {\n    geocode: [19.42881, -99.194679],\n    popUp: \"Test 2\"\n  }, {\n    geocode: [19.428512573242188, -99.16178131103516],\n    popUp: \"Test 3\"\n  }];\n  useEffect(() => {\n    // Load agebs_counts_updated.geojson\n    fetch(\"/path/to/agebs_counts_updated.geojson\").then(response => response.json()).then(data => {\n      setAgebsGeoJSON(data);\n    }).catch(error => console.error(\"Error loading Agebs GeoJSON:\", error));\n  }, []);\n\n  // Function to handle finding and highlighting Ageb\n  const highlightAgeb = (agebGeoJSON, userPosition) => {\n    if (!agebGeoJSON || !userPosition) return;\n\n    // Loop through features to find the Ageb containing user's position\n    agebGeoJSON.features.forEach(feature => {\n      const polygon = L.geoJSON(feature.geometry);\n      if (polygon.getBounds().contains(userPosition)) {\n        // Highlight or style the Ageb polygon\n        // For example, set a specific style or store selected Ageb ID in state\n        console.log(\"Selected Ageb:\", feature.properties.CVE_AGEB);\n      }\n    });\n  };\n\n  // Call highlightAgeb whenever selectPosition changes\n  useEffect(() => {\n    highlightAgeb(agebsGeoJSON, selectPosition);\n  }, [selectPosition, agebsGeoJSON]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.geocode,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: marker.popUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), agebsGeoJSON && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: agebsGeoJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ResetCenterView, {\n        selectPosition: selectPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s2(Maps, \"KYwzseGywL7P42NIALxrgCBRub4=\");\n_c2 = Maps;\nexport default Maps;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResetCenterView\");\n$RefreshReg$(_c2, \"Maps\");","map":{"version":3,"names":["React","useEffect","useState","L","MapContainer","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","useMap","jsxDEV","_jsxDEV","position","ResetCenterView","props","_s","selectPosition","map","setView","latLng","lat","lon","getZoom","animate","_c","Maps","_s2","agebsGeoJSON","setAgebsGeoJSON","markers","geocode","popUp","fetch","then","response","json","data","catch","error","console","highlightAgeb","agebGeoJSON","userPosition","features","forEach","feature","polygon","geoJSON","geometry","getBounds","contains","log","properties","CVE_AGEB","className","children","center","zoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","index","_c2","$RefreshReg$"],"sources":["/Users/minaguevara/Desktop/Dev/web_dev/rus-map/src/Maps.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport { useMap } from \"react-leaflet\";\n\nconst position = [19.432608, -99.133209];\n\nfunction ResetCenterView(props) {\n  const { selectPosition } = props;\n  const map = useMap();\n\n  useEffect(() => {\n    if (selectPosition) {\n      map.setView(\n        L.latLng(selectPosition.lat, selectPosition.lon),\n        map.getZoom(),\n        {\n          animate: true,\n        }\n      );\n    }\n  }, [selectPosition]);\n\n  return null;\n}\n\nfunction Maps(props) {\n  const { selectPosition } = props;\n  const [agebsGeoJSON, setAgebsGeoJSON] = useState(null);\n\n  // Simulated markers for testing\n  const markers = [\n    {\n      geocode: [19.50387, -99.20958],\n      popUp: \"Test 1\",\n    },\n    {\n      geocode: [19.42881, -99.194679],\n      popUp: \"Test 2\",\n    },\n    {\n      geocode: [19.428512573242188, -99.16178131103516],\n      popUp: \"Test 3\",\n    },\n  ];\n\n  useEffect(() => {\n    // Load agebs_counts_updated.geojson\n    fetch(\"/path/to/agebs_counts_updated.geojson\")\n      .then((response) => response.json())\n      .then((data) => {\n        setAgebsGeoJSON(data);\n      })\n      .catch((error) => console.error(\"Error loading Agebs GeoJSON:\", error));\n  }, []);\n\n  // Function to handle finding and highlighting Ageb\n  const highlightAgeb = (agebGeoJSON, userPosition) => {\n    if (!agebGeoJSON || !userPosition) return;\n\n    // Loop through features to find the Ageb containing user's position\n    agebGeoJSON.features.forEach((feature) => {\n      const polygon = L.geoJSON(feature.geometry);\n      if (polygon.getBounds().contains(userPosition)) {\n        // Highlight or style the Ageb polygon\n        // For example, set a specific style or store selected Ageb ID in state\n        console.log(\"Selected Ageb:\", feature.properties.CVE_AGEB);\n      }\n    });\n  };\n\n  // Call highlightAgeb whenever selectPosition changes\n  useEffect(() => {\n    highlightAgeb(agebsGeoJSON, selectPosition);\n  }, [selectPosition, agebsGeoJSON]);\n\n  return (\n    <div className=\"map-container\">\n      <MapContainer center={position} zoom={13}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {/* Display markers */}\n        {markers.map((marker, index) => (\n          <Marker key={index} position={marker.geocode}>\n            <Popup>{marker.popUp}</Popup>\n          </Marker>\n        ))}\n\n        {/* Display Agebs GeoJSON */}\n        {agebsGeoJSON && <GeoJSON data={agebsGeoJSON} />}\n\n        {/* Reset center view when selectPosition changes */}\n        <ResetCenterView selectPosition={selectPosition} />\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}