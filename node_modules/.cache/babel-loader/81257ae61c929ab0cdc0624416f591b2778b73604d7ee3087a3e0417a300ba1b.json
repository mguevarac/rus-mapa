{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", {\n  value,\n  configurable: true\n});\n\n// index.ts\nimport { booleanDisjoint } from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\nfunction booleanIntersects(feature1, feature2) {\n  let bool = false;\n  flattenEach(feature1, flatten1 => {\n    flattenEach(feature2, flatten2 => {\n      if (bool === true) {\n        return true;\n      }\n      bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry);\n    });\n  });\n  return bool;\n}\n__name(booleanIntersects, \"booleanIntersects\");\nvar turf_boolean_intersects_default = booleanIntersects;\nexport { booleanIntersects, turf_boolean_intersects_default as default };","map":{"version":3,"names":["booleanDisjoint","flattenEach","booleanIntersects","feature1","feature2","bool","flatten1","flatten2","geometry","__name","turf_boolean_intersects_default"],"sources":["/Users/minaguevara/Desktop/Dev/web_dev/rus-map/node_modules/@turf/boolean-intersects/index.ts"],"sourcesContent":["import { Feature, Geometry } from \"geojson\";\nimport { booleanDisjoint } from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\n\n/**\n * Boolean-intersects returns (TRUE) two geometries intersect.\n *\n * @name booleanIntersects\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanIntersects(line, point);\n * //=true\n */\nfunction booleanIntersects(\n  feature1: Feature<any> | Geometry,\n  feature2: Feature<any> | Geometry\n) {\n  let bool = false;\n  flattenEach(feature1, (flatten1) => {\n    flattenEach(feature2, (flatten2) => {\n      if (bool === true) {\n        return true;\n      }\n      bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry);\n    });\n  });\n  return bool;\n}\n\nexport { booleanIntersects };\nexport default booleanIntersects;\n"],"mappings":";;;;;;;AACA,SAASA,eAAA,QAAuB;AAChC,SAASC,WAAA,QAAmB;AAgB5B,SAASC,kBACPC,QAAA,EACAC,QAAA,EACA;EACA,IAAIC,IAAA,GAAO;EACXJ,WAAA,CAAYE,QAAA,EAAWG,QAAA,IAAa;IAClCL,WAAA,CAAYG,QAAA,EAAWG,QAAA,IAAa;MAClC,IAAIF,IAAA,KAAS,MAAM;QACjB,OAAO;MACT;MACAA,IAAA,GAAO,CAACL,eAAA,CAAgBM,QAAA,CAASE,QAAA,EAAUD,QAAA,CAASC,QAAQ;IAC9D,CAAC;EACH,CAAC;EACD,OAAOH,IAAA;AACT;AAdSI,MAAA,CAAAP,iBAAA;AAiBT,IAAOQ,+BAAA,GAAQR,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}