{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./App.css\";import\"leaflet/dist/leaflet.css\";import{MapContainer,TileLayer,Marker,Popup,GeoJSON}from\"react-leaflet\";import{Icon}from\"leaflet\";import{useMap}from\"react-leaflet/hooks\";import{point}from\"@turf/helpers\";import booleanPointInPolygon from\"@turf/boolean-point-in-polygon\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const position=[19.432608,-99.133209];function ResetCenterView(props){const{selectPosition}=props;const map=useMap();useEffect(()=>{if(selectPosition){map.setView([selectPosition.lat,selectPosition.lon],15.1);}},[selectPosition,map]);return null;}function Maps(props){const{selectPosition,setSelectedAgeb}=props;// Add setSelectedAgeb prop\nconst[geoData,setGeoData]=useState(null);const[selectedPolygon,setSelectedPolygon]=useState(null);const locationSelection=[selectPosition===null||selectPosition===void 0?void 0:selectPosition.lat,selectPosition===null||selectPosition===void 0?void 0:selectPosition.lon];useEffect(()=>{fetch(\"/agebs.geojson\").then(response=>{if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return response.json();}).then(data=>{setGeoData(data);}).catch(error=>{console.error(\"Error fetching the GeoJSON data:\",error);});},[]);useEffect(()=>{if(geoData&&selectPosition&&selectPosition.lat&&selectPosition.lon){const lat=parseFloat(selectPosition.lat);const lon=parseFloat(selectPosition.lon);if(!isNaN(lat)&&!isNaN(lon)){try{const pt=point([lon,lat]);const containingPolygon=geoData.features.find(feature=>{return booleanPointInPolygon(pt,feature);});setSelectedPolygon(containingPolygon);setSelectedAgeb(containingPolygon);// Set the selected polygon in the parent state\nconsole.log(\"Selected polygon:\",containingPolygon);}catch(error){console.error(\"Error in polygon selection:\",error);}}else{console.error(\"Invalid coordinates:\",selectPosition);}}},[geoData,selectPosition,setSelectedAgeb]);const customIcon=new Icon({iconUrl:require(\"./img/marker.webp\"),iconSize:[20,28]});return/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",children:/*#__PURE__*/_jsxs(MapContainer,{center:position,zoom:13,children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"}),selectPosition&&/*#__PURE__*/_jsx(Marker,{position:locationSelection,icon:customIcon,children:/*#__PURE__*/_jsxs(Popup,{children:[\"A pretty CSS3 popup. \",/*#__PURE__*/_jsx(\"br\",{}),\" Easily customizable.\"]})}),/*#__PURE__*/_jsx(ResetCenterView,{selectPosition:selectPosition}),selectedPolygon&&/*#__PURE__*/_jsx(GeoJSON,{data:selectedPolygon,style:{color:\"#4361EE\",fillColor:\"#4361EE\",fillOpacity:0.3},children:/*#__PURE__*/_jsx(Popup,{children:\"This is the AGEB containing the selected point.\"})},JSON.stringify(selectedPolygon)),geoData&&/*#__PURE__*/_jsx(GeoJSON,{data:geoData,style:{color:\"#735F3D\",weight:0.6}})]})});}export default Maps;","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","GeoJSON","Icon","useMap","point","booleanPointInPolygon","jsx","_jsx","jsxs","_jsxs","position","ResetCenterView","props","selectPosition","map","setView","lat","lon","Maps","setSelectedAgeb","geoData","setGeoData","selectedPolygon","setSelectedPolygon","locationSelection","fetch","then","response","ok","Error","concat","status","json","data","catch","error","console","parseFloat","isNaN","pt","containingPolygon","features","find","feature","log","customIcon","iconUrl","require","iconSize","className","children","center","zoom","attribution","url","icon","style","color","fillColor","fillOpacity","JSON","stringify","weight"],"sources":["/Users/minaguevara/Desktop/Dev/websites/rus-mapa/src/Maps.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { useMap } from \"react-leaflet/hooks\";\n\nimport { point } from \"@turf/helpers\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\n\nconst position = [19.432608, -99.133209];\n\nfunction ResetCenterView(props) {\n  const { selectPosition } = props;\n  const map = useMap();\n\n  useEffect(() => {\n    if (selectPosition) {\n      map.setView([selectPosition.lat, selectPosition.lon], 15.1);\n    }\n  }, [selectPosition, map]);\n\n  return null;\n}\n\nfunction Maps(props) {\n  const { selectPosition, setSelectedAgeb } = props; // Add setSelectedAgeb prop\n  const [geoData, setGeoData] = useState(null);\n  const [selectedPolygon, setSelectedPolygon] = useState(null);\n  const locationSelection = [selectPosition?.lat, selectPosition?.lon];\n\n  useEffect(() => {\n    fetch(\"/agebs.geojson\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setGeoData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching the GeoJSON data:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (geoData && selectPosition && selectPosition.lat && selectPosition.lon) {\n      const lat = parseFloat(selectPosition.lat);\n      const lon = parseFloat(selectPosition.lon);\n\n      if (!isNaN(lat) && !isNaN(lon)) {\n        try {\n          const pt = point([lon, lat]);\n\n          const containingPolygon = geoData.features.find((feature) => {\n            return booleanPointInPolygon(pt, feature);\n          });\n\n          setSelectedPolygon(containingPolygon);\n          setSelectedAgeb(containingPolygon); // Set the selected polygon in the parent state\n          console.log(\"Selected polygon:\", containingPolygon);\n        } catch (error) {\n          console.error(\"Error in polygon selection:\", error);\n        }\n      } else {\n        console.error(\"Invalid coordinates:\", selectPosition);\n      }\n    }\n  }, [geoData, selectPosition, setSelectedAgeb]);\n\n  const customIcon = new Icon({\n    iconUrl: require(\"./img/marker.webp\"),\n    iconSize: [20, 28],\n  });\n\n  return (\n    <div className=\"map-container\">\n      <MapContainer center={position} zoom={13}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {selectPosition && (\n          <Marker position={locationSelection} icon={customIcon}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        )}\n        <ResetCenterView selectPosition={selectPosition} />\n        {selectedPolygon && (\n          <GeoJSON\n            key={JSON.stringify(selectedPolygon)}\n            data={selectedPolygon}\n            style={{ color: \"#4361EE\", fillColor: \"#4361EE\", fillOpacity: 0.3 }}\n          >\n            <Popup>This is the AGEB containing the selected point.</Popup>\n          </GeoJSON>\n        )}\n        {geoData && (\n          <GeoJSON data={geoData} style={{ color: \"#735F3D\", weight: 0.6 }} />\n        )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Maps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}